const { Telegraf } = require('telegraf')
const token = 'YOUR_BOT_TOKEN'
const bot = new Telegraf(token)

const Queue = require('./queue')
const queue = new Queue()

const getKeyboard = require('./utils/getKeyboard')

bot.start(ctx => {
  const msg =
    '–ü—Ä–∏–≤–µ—Ç!\n' +
    '–Ø –ø–æ–º–æ–≥–∞—é –∑–∞–±—Ä–æ–Ω–∏—Ä–æ–≤–∞—Ç—å –º–µ—Å—Ç–æ –≤ –æ—á–µ—Ä–µ–¥–∏.\n' +
    'ü§ñ /help ‚Äî —É–∑–Ω–∞—Ç—å –∫–æ–º–∞–Ω–¥—ã'
  ctx.reply(msg)
})
bot.help(ctx => {
  const msg =
    '‚úç /queue ‚Äî –∑–∞–±—Ä–æ–Ω–∏—Ä–æ–≤–∞—Ç—å —Å–ª–æ—Ç\n' +
    'üôÖ‚Äç‚ôÇÔ∏è /cancel ‚Äî –æ—Ç–º–µ–Ω–∏—Ç—å –±—Ä–æ–Ω—å\n' +
    'üÜì /slots ‚Äî –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Å–≤–æ–±–æ–¥–Ω—ã–µ —Å–ª–æ—Ç—ã'
  ctx.reply(msg)
})

bot.command('queue', async (ctx) => {
  const chatId = ctx.message.chat.id
  const username = ctx.message.chat.username ? ctx.message.chat.username : chatId
  const todayData = await queue.getTodayFile()
  const freeSlots = Object.keys(todayData).filter(item => !todayData[item].length)
  if (!freeSlots.length) {
    ctx.reply('üò£ –í—Å–µ —Å–ª–æ—Ç—ã –∑–∞–Ω—è—Ç—ã')
  } else {
    ctx.reply('ü§î –í—ã–±–µ—Ä–∏ –≤—Ä–µ–º—è', getKeyboard(freeSlots, 'set', username))
  }
})

bot.command('cancel', async (ctx) => {
  const chatId = ctx.message.chat.id
  const username = ctx.message.chat.username ? ctx.message.chat.username : chatId
  const todayData = await queue.getTodayFile()
  const userSlots = Object.keys(todayData).filter(item => todayData[item] === `@${username}`)
  if (!userSlots.length) {
    ctx.reply('üôá‚Äç‚ôÇÔ∏è –£ —Ç–µ–±—è —Å–µ–≥–æ–¥–Ω—è –Ω–µ –∑–∞–±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–æ –≤—Ä–µ–º—è, –æ—Ç–º–µ–Ω—è—Ç—å –Ω–µ—á–µ–≥–æ')
  } else {
    ctx.reply('ü§î –í—ã–±–µ—Ä–∏ –≤—Ä–µ–º—è', getKeyboard(userSlots, 'cancel', username))
  }
})

bot.command('slots', async (ctx) => {
  const todayData = await queue.getTodayFile()
  const slots = Object.keys(todayData)
    .map(item => `<b>${item}</b>: ${todayData[item].length ? todayData[item] : '—Å–≤–æ–±–æ–¥–Ω–æ'}`)
    .join('\n')
  ctx.reply(slots, { parse_mode: 'HTML' })
})

bot.on('callback_query', async (ctx) => {
  const messageId = ctx.callbackQuery.message.message_id
  const chatId = ctx.callbackQuery.message.chat.id
  const data = ctx.callbackQuery.data.split('|')
  const type = data[0]
  const time = data[1]
  const username = data[2]

  if (type === 'set') {
    const setTime = await queue.setQueue(time, username)
    const messageText = !setTime
      ? '‚ùå –≠—Ç–æ –≤—Ä–µ–º—è —É–∂–µ –∑–∞–Ω—è—Ç–æ'
      : `‚úÖ –ó–∞–±—Ä–æ–Ω–∏—Ä–æ–≤–∞–ª –Ω–∞ ${time}\n` +
      'üôÖ‚Äç‚ôÇÔ∏è /cancel ‚Äî –æ—Ç–º–µ–Ω–∏—Ç—å –±—Ä–æ–Ω—å\n' +
      'üÜì /slots ‚Äî –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Å–≤–æ–±–æ–¥–Ω—ã–µ —Å–ª–æ—Ç—ã'
    ctx.telegram.editMessageText(chatId, messageId, '', messageText)
  } else if (type === 'cancel') {
    const cancelTime = await queue.removeQueue(time, username)
    const messageText = !cancelTime
      ? '‚ùå –¢—ã –ø—ã—Ç–∞–µ—à—å—Å—è –æ—Ç–º–µ–Ω–∏—Ç—å –Ω–µ —Å–≤–æ—ë –≤—Ä–µ–º—è, –ª–∏–±–æ —ç—Ç–æ –≤—Ä–µ–º—è —Å–≤–æ–±–æ–¥–Ω–æ.'
      : `‚úÖ –û—Ç–º–µ–Ω–∏–ª —Å–ª–æ—Ç –Ω–∞ ${time}\n` +
      '‚úç /queue ‚Äî –∑–∞–±—Ä–æ–Ω–∏—Ä–æ–≤–∞—Ç—å —Å–ª–æ—Ç\n' +
      'üÜì /slots ‚Äî –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Å–≤–æ–±–æ–¥–Ω—ã–µ —Å–ª–æ—Ç—ã'
    ctx.telegram.editMessageText(chatId, messageId, '', messageText)
  }
})

bot.launch()
